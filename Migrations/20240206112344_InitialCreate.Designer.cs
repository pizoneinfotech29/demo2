// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using task.Data;

#nullable disable

namespace task.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240206112344_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("task.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfStudents")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ClassA",
                            NumberOfStudents = 35,
                            SchoolId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "ClassB",
                            NumberOfStudents = 40,
                            SchoolId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "ClassC",
                            NumberOfStudents = 39,
                            SchoolId = 1
                        });
                });

            modelBuilder.Entity("task.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Uday Marg Tilak Nagar Jaipur",
                            Name = "Little Kingdom School"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Sanganer Bazar Jaipur",
                            Name = "VSI International School"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Jagatpura Getor Jaipur",
                            Name = "Gyan Jyoti Vidyapeeth"
                        });
                });

            modelBuilder.Entity("task.Models.Class", b =>
                {
                    b.HasOne("task.Models.School", "School")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("task.Models.School", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
